name: Prod build&deploy

on: 
  push:
    branches: [prod]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101

      - name: Cache nuget
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore --locked-mode
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
  
  publish-backend-project:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101

      - name: Cache nuget
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore --locked-mode
        
      - name: Publish backend
        run: dotnet publish -c Release -v d -o ./bin/Docker /p:DebugType=None --self-contained=false --no-restore
        working-directory: ./Src/NpuRozklad.Web/
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-published-$GITHUB_SHA
          path: ./Src/NpuRozklad.Web/bin/Docker/
  
  push-docker-images:
    needs: publish-backend-project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-published-$GITHUB_SHA
          path: ./Src/NpuRozklad.Web/bin/Docker
      
      - name: Print the content of the publish directory
        run: ls -l
        working-directory: ./Src/NpuRozklad.Web/bin/Docker
      
      - name: Push reverse-proxy image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: matryoshka/npu-rozklad-reverse-proxy
          path: ./.deploy/nginx/
          tags: latest
      
      - name: Push backend project image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: matryoshka/npu-rozklad-backend
          path: ./Src/NpuRozklad.Web/
          tags: latest
        
  copy-files:
    needs: push-docker-images
    runs-on: ubuntu-latest
    
    steps: 
      - uses: actions/checkout@v2
      - name: copy deploy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.RSA_PRIVATE_KEY }}
          source: ".deploy/create-compose-file.sh,.deploy/docker-compose.yml"
          target: "/npu-rozklad-app-deploy"
          strip_components: 1
      
  execute-remote-commands:
    needs: copy-files
    runs-on: ubuntu-latest
    
    env:
      BOT_TOKEN: ${{ secrets.PROD_BOT_TOKEN }}
      CONNECTION_STRING: ${{ secrets.PROD_MYSQL_CONNECTION_STRING }}
      DB_PASS: ${{ secrets.PROD_MYSQL_PASSWORD }}
    
    steps:
    - name: executing ssh command script on host
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.RSA_PRIVATE_KEY }}
        envs: BOT_TOKEN,CONNECTION_STRING,DB_PASS
        script: |
          export BOT_TOKEN=$BOT_TOKEN
          export CONNECTION_STRING=$CONNECTION_STRING
          export DB_PASS=$DB_PASS
          cd /npu-rozklad-app-deploy
          ./create-compose-file.sh
          docker pull matryoshka/npu-rozklad-backend
          docker pull matryoshka/npu-rozklad-reverse-proxy
          docker-compose -f docker-compose.yml -f compose-override.yml -p npu-rozklad-app up -d
            
      